- name: setup a target group for ELB
  elb_target_group:
    name: "{{ cluster_name |replace('_', '-') }}"
    region: "{{ cloud_config.region }}"
    protocol: http
    target_type: ip
    health_check_port: "5000"
    port: "5000"
    vpc_id: "{{ scalable_vpc_facts.vpcs[0]['vpc_id'] }}"
    health_check_path: /_health
    successful_response_codes: "200, 250-260"
    state: present
    modify_targets: false
  tags:
      - elb
    

- name: configure ELB for app
  elb_application_lb:
    state: present
    name: "{{ cluster_name |replace('_', '-') }}"
    scheme: internet-facing
    security_groups:
      - "{{ http_security_group.security_groups[0]['group_id'] }}"
    region: "{{ cloud_config.region }}"
    subnets:
      - "{{ cluster_subnet.results[0]['subnet']['id'] }}"
    listeners:
      - Protocol: HTTP
        Port: "80"
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ cluster_name |replace('_', '-') }}"
  register: ecs_elb

- name: Lookup elb_target_group_facts
  elb_target_group_facts:
    region: "{{ cloud_config.region }}"
    names:
      - "{{ cluster_name |replace('_', '-') }}"
  register: elb_target_group_facts
- debug: msg="target group {{ elb_target_group_facts.target_groups[0]['target_group_arn'] }}"

- name: Lookup Elb Facts
  shell: "(aws elbv2 describe-load-balancers --names {{ cluster_name |replace('_', '-') }} --output=json --region {{ cloud_config.region }})"
  register: ecs_elb_facts

- name: Make facts about elbs
  set_fact:
    ecs_elb_fact: "{{ ecs_elb_facts.stdout }}"
- debug: msg="{{ ecs_elb_facts.stdout }}"
